---
name: Build Disk Images

on:
  registry_package:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'The container image tag to build disk images from'
        required: true
        default: 'latest'
        type: string

env:
  IMAGE_NAME: "${{ github.event.repository.name }}"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608"
  IMAGE_TAG: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.registry_package.package_version.version }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.registry_package.package_version.version }}
  cancel-in-progress: true

jobs:
  build_qcow2:
    name: Build QCOW2 disk image
    # Only run on container packages from this repository
    if: >-
      github.event_name == 'workflow_dispatch' ||
      (github.event.registry_package.package_type == 'container' &&
      github.event.registry_package.namespace == github.repository_owner &&
      github.event.registry_package.name == env.IMAGE_NAME)
    runs-on: ubuntu-24.04
    timeout-minutes: 60

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Debug environment
        run: |
          echo "Image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          echo "Disk type: qcow2"
          echo "Config file: ./disk_config/disk.toml"

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull container image
        run: podman pull ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Build QCOW2 disk image
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/disk.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: qcow2
          additional-args: --use-librepo=True

      - name: Upload QCOW2 disk image and Checksum to Job Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: disk-image-qcow2-${{ github.run_number }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true

  build_anaconda_iso:
    name: Build Anaconda ISO
    # Only run on container packages from this repository
    if: >-
      github.event_name == 'workflow_dispatch' ||
      (github.event.registry_package.package_type == 'container' &&
      github.event.registry_package.namespace == github.repository_owner &&
      github.event.registry_package.name == env.IMAGE_NAME)
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Debug environment
        run: |
          echo "Image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          echo "Disk type: anaconda-iso"
          echo "Config file: ./disk_config/iso.toml"

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull container image
        run: podman pull ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Build Anaconda ISO
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/iso.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: anaconda-iso
          additional-args: --use-librepo=True

      - name: Upload Anaconda ISO and Checksum to Job Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: disk-image-anaconda-iso-${{ github.run_number }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true

  summary:
    name: Build Summary
    runs-on: ubuntu-24.04
    needs: [build_qcow2, build_anaconda_iso]
    if: always()

    steps:
      - name: Build Summary
        run: |
          echo "## Disk Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| QCOW2 Disk | ${{ needs.build_qcow2.result == 'success' && '✅ Success' || needs.build_qcow2.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Anaconda ISO | ${{ needs.build_anaconda_iso.result == 'success' && '✅ Success' || needs.build_anaconda_iso.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
