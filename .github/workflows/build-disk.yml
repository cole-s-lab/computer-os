---
name: Build disk images

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      registry:
        required: true
        type: string
      tag:
        required: true
        type: string
      upload:
        required: true
        type: boolean
      build-qcow2:
        required: false
        type: boolean
        default: true
      build-iso:
        required: false
        type: boolean
        default: true

env:
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_qcow2:
    name: Build QCOW2 disk image
    runs-on: ubuntu-24.04
    if: inputs.build-qcow2 == true
    timeout-minutes: 60

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Debug environment
        run: |
          echo "Image: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}"
          echo "Disk type: qcow2"
          echo "Config file: ./disk_config/disk.toml"
          echo "Upload: ${{ inputs.upload }}"

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build QCOW2 disk image
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/disk.toml
          image: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: qcow2
          additional-args: --use-librepo=True

      - name: Upload QCOW2 disk image and Checksum to Job Artifacts
        if: inputs.upload == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: disk-image-qcow2-${{ github.run_number }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true

  build_anaconda_iso:
    name: Build Anaconda ISO
    runs-on: ubuntu-24.04
    if: inputs.build-iso == true
    timeout-minutes: 120

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Debug environment
        run: |
          echo "Image: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}"
          echo "Disk type: anaconda-iso"
          echo "Config file: ./disk_config/iso.toml"
          echo "Upload: ${{ inputs.upload }}"

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build Anaconda ISO
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/iso.toml
          image: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: anaconda-iso
          additional-args: --use-librepo=True

      - name: Upload Anaconda ISO and Checksum to Job Artifacts
        if: inputs.upload == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: disk-image-anaconda-iso-${{ github.run_number }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true

  summary:
    name: Build Summary
    runs-on: ubuntu-24.04
    needs: [build_qcow2, build_anaconda_iso]
    if: always() && (needs.build_qcow2.result == 'success' || needs.build_anaconda_iso.result == 'success')

    steps:
      - name: Build Summary
        run: |
          echo "## Disk Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Disk Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| QCOW2 | ${{ needs.build_qcow2.result == 'success' && '✅ Success' || needs.build_qcow2.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Anaconda ISO | ${{ needs.build_anaconda_iso.result == 'success' && '✅ Success' || needs.build_anaconda_iso.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
